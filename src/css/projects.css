nav a {
  color: #666666;
}

nav a.active {
  color: #000000;
  font-weight: 700;
  transition: all 0.2s;
  scroll-margin: 20px;
}

body {
  grid-template-rows: unset;
  height: unset;
  overflow: scroll;
}

div.content {
  grid-column: 3 / -3;
  display: grid;
  grid-template-columns: subgrid;
}

.projectTitle {
  position: sticky;
  margin-top: 0;
  top: 34px;
  grid-column: 1 / -1;
  z-index: 99;
  margin-bottom: 4em;
  height: 3em;
  grid-row: 1;
  pointer-events: none;
}

.projectTitle > .bt {
  opacity: 0;
}

.projectTitle.first {
  pointer-events: auto;
}

.projectTitle.first > .bt {
  opacity: 1;
}

.projectTitle > .projectName {
  display: inline-block;
  white-space: nowrap;
  width: 0;
}

p {
  font-size: 11px;
  font-family: Helvetica, sans-serif;
  font-weight: 400;
  line-height: 120%;
  text-transform: uppercase;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.subtitle {
  font-size: 11px;
  font-family: Helvetica, sans-serif;
  font-weight: 700;
  line-height: 120%;
  text-transform: uppercase;
  color: #000000;
}

span.caption {
  font-size: var(--body-text-size);
  font-family: times-new-roman, serif;
  color: #ffffff;
  mix-blend-mode: difference;
  grid-column: 1 / -1;
  grid-row: 1;
  justify-self: right;
  align-self: end;
  position: relative;
  bottom: calc(var(--caption-overhang-y) + var(--body-text-size) / 2);
  right: calc(var(--caption-overhang-x) * -1);
  height: 0;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  z-index: 999;
}

article {
  grid-column: 1 / -1;
}

/*
We can't use subgrid here because the main project container
must be a block element so the position sticky works correctly.
So here we're creating another grid with the same column widths
as the main body grid, just fewer of them.
*/
article div.projectContent {
  display: grid;
  grid-template-columns: repeat(
    16,
    calc(calc(100vw - var(--body-padding) * 2) / 20)
  );
}

article div.copy {
  grid-column: 1 / 5;
  grid-row: 1;
  position: sticky;
  top: calc(50vh + var(--title-size));
  transform: translateY(calc(-50% - var(--title-size)));
  align-self: start;
  margin-bottom: 50em;
  background-color: #ffffff;
}

article div.copy p {
  pointer-events: none;
}

article div.copy a {
  pointer-events: auto;
}

article div.imagery {
  display: grid;
  grid-template-columns: subgrid;
  grid-column-start: 9;
  grid-column-end: 17;
  grid-row: 1;
  cursor: grab;
}

article div.imagery > div {
  height: 77vh;
}

div.clipBox {
  overflow: hidden;
  width: 100%;
  height: 100%;
  grid-row: 1 / -1;
  grid-column: 1 / 9;
}

div.blurBorderImage {
  display: grid;
  grid-template-columns: subgrid;
  grid-column: 1 / 9;
  align-items: center;
  justify-items: center;
}

div.blurBorderImage > :first-child > * {
  filter: blur(40px);
  align-self: center;
  transform: scale(120%);
  max-height: 77vh;
}

div.blurBorderImage > :first-child > * {
  height: 100%;
}

div.blurBorderImage > :nth-child(2) {
  grid-row: 1;
  grid-column: 2 / 8;
  width: 100%;
  z-index: 50;
  align-self: center;
}

div.blurBorderImage.fullWidth > :nth-child(2) {
  grid-column: 1/-1;
}

div.blurBorderImage.doubleMobile > :nth-child(2) {
  grid-column: 2/-2;
}

div.fullWidthImage {
  grid-column: 1 / 9;
  width: 100%;
  height: 100%;
  display: grid;
  grid-template-columns: subgrid;
  align-items: center;
}

div.fullWidthImage > :first-child {
  width: 100%;
  grid-row: 1;
  grid-column: 1 / 9;
}

div.videoWithBackgroundImage {
  display: grid;
  grid-template-columns: subgrid;
  align-items: center;
  grid-column: 1 / 9;
}

div.videoWithBackgroundImage > :first-child > * {
  width: 100%;
}

div.videoWithBackgroundImage > video {
  grid-row: 1;
  grid-column: 1 / 9;
  width: 100%;
}

.heroButton {
  padding-bottom: 10px;
  height: var(--hero-button-height);
  display: inline-block;
  mix-blend-mode: difference;
}

.heroButton svg {
  mix-blend-mode: difference;
}

.heroButton svg .icon {
  fill: #ffffff;
  animation: fadeInOut 1s ease-in-out alternate-reverse infinite;
}

.heroButton svg .text {
  fill: #ffffff;
}

.heroButton svg .edge {
  stroke: #ffffff;
  stroke-linecap: round;
  stroke-dasharray: 2 10;
  transition: stroke-dasharray 1s;
}

.heroButton svg:hover .edge {
  stroke-dasharray: 10 10;
}

@keyframes fadeInOut {
  to {
    opacity: 0;
  }
}

#openingTitle {
  width: 100dvw;
  height: 100dvh;
  background-color: #ffffff;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 9998;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: opacity 1s ease-in-out;
}

@media screen and (orientation: portrait) {
  :root {
    --title-size: 18px;
  }

  body {
    padding-top: 0;
    grid-template-rows:
      calc(
        100dvh - var(--m-nav-height) - var(--m-buttons-height) -
          var(--body-padding) * 2
      )
      var(--m-nav-height) var(--m-buttons-height);
    width: calc(100dvw - var(--body-padding) * 2);
    height: calc(100dvh - var(--body-padding) * 2);
    align-items: unset;
  }

  nav {
    box-shadow: 0 -10px 20px -5px rgba(115, 115, 115, 0.5);
    grid-row: 2;
  }

  nav a {
    scroll-margin: 20px;
  }

  article {
    flex-shrink: 0;
    padding-left: var(--body-padding);
    margin-right: calc(var(--body-padding) * -1);
  }

  .projectTitle {
    position: sticky;
    left: 36px;
    top: 46px;
    margin-right: 20px;
    margin-left: 20px;
  }

  .projectTitle.first {
    position: fixed;
    top: 40px;
    left: 40px;
    right: unset;
    white-space: nowrap;
    margin-left: 0;
  }

  .projectTitle > .projectName {
    width: auto;
  }

  div.content {
    display: flex;
    grid-row: 1;
    grid-column: 1 / -1;
    width: 100dvw;
    height: calc(
      100dvh - var(--m-nav-height) - var(--m-buttons-height) -
        var(--body-padding) * 2
    );
    margin-left: calc(var(--body-padding) * -1);
    overflow-x: scroll;
    overflow-y: clip;
    position: relative;
    scrollbar-width: none;
  }

  article div.projectContent {
    display: grid;
    grid-template: 1fr / 1fr;
    place-items: start;
    height: calc(
      100dvh - var(--m-nav-height) - var(--m-buttons-height) -
        var(--body-padding) * 2
    );
    justify-content: flex-start;
    width: 100%;
    position: relative;
  }

  article div.projectContent > * {
    grid-column: 1 / 1;
    grid-row: 1 / 1;
  }

  article div.imagery {
    transform: unset;
    display: flex;
    height: calc(
      100dvh - var(--m-nav-height) - var(--m-buttons-height) -
        var(--body-padding) * 2 - var(--m-closed-drawer-height)
    );
    overflow: hidden;
  }

  article div.imagery > div {
    height: calc(
      100dvh - var(--m-nav-height) - var(--m-buttons-height) -
        var(--body-padding) * 2 - var(--m-closed-drawer-height)
    );
    width: calc(100dvw - 40px);
    flex-shrink: 0;
    overflow: hidden;
    position: relative;
    grid-template-columns: repeat(
      10,
      calc((100dvw - var(--body-padding) * 2) / 10)
    );
  }

  div.blurBorderImage > :first-child {
    grid-row: 1;
    grid-column: 1 / -1;
  }

  div.blurBorderImage > :nth-child(2) {
    grid-row: 1;
    grid-column: 3 / 9;
    height: 70%;
    z-index: 50;
    align-self: center;
    object-fit: cover;
  }

  div.blurBorderImage.fullWidth > :nth-child(2) {
    height: unset;
  }

  div.blurBorderImage.doubleMobile > :nth-child(2) {
    height: unset;
    grid-column: 2 / 10;
  }

  div.clipBox {
    grid-column: 1 / -1;
  }

  div.videoWithBackgroundImage > :first-child > * {
    grid-column: 1 / -1;
  }

  div.videoWithBackgroundImage > video {
    grid-column: 1 / -1;
  }

  div.videoWithBackgroundImage > :first-child > * {
    height: 100%;
  }

  div.fullWidthImage > :first-child {
    grid-column: 1 / -1;
    height: 100%;
    object-fit: cover;
    object-position: center;
  }

  span.caption {
    right: 20px;
    z-index: 99;
    grid-row: 1;
    grid-column: 1 / -1;
    justify-self: end;
    align-self: end;
  }

  article div.copy {
    transform: translateY(calc(100% - 50px));
    transition: transform 0.5s ease-in-out;
    position: sticky;
    left: 20px;
    top: unset;
    bottom: 0;
    margin-bottom: unset;
    padding-top: 10px;
    padding-left: 20px;
    padding-right: 20px;
    width: calc(100vw - var(--body-padding) * 2 - 40px);
    background-color: #ffffff;
    z-index: 999;
    align-self: end;
    flex-shrink: 0;
    cursor: pointer;
  }

  article div.copy.open {
    transform: none;
  }

  .heroButton {
    position: sticky;
    left: 40px;
    bottom: 50px;
    align-self: flex-end;
    z-index: 99;
    margin-left: 20px;
    margin-right: 20px;
  }

  span.bt {
    display: none;
  }

  h1.first > span.bt {
    display: unset;
  }
  #openingTitle {
    display: none;
  }
}
